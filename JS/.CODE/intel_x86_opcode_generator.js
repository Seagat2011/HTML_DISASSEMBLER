
let two_byte_excludes = new Set()
two_byte_excludes.add( '04' )
two_byte_excludes.add( '05' )
two_byte_excludes.add( '0a' )
two_byte_excludes.add( '0c' )
two_byte_excludes.add( '0e' )
two_byte_excludes.add( '0f' )
two_byte_excludes.add( '24' )
two_byte_excludes.add( '25' )
two_byte_excludes.add( '26' )
two_byte_excludes.add( '27' )
two_byte_excludes.add( '36' )
two_byte_excludes.add( '39' )
two_byte_excludes.add( '3c' )
two_byte_excludes.add( '3d' )
two_byte_excludes.add( '3e' )
two_byte_excludes.add( '3f' )
two_byte_excludes.add( '7a' )
two_byte_excludes.add( '7b' )
two_byte_excludes.add( 'a6' )
two_byte_excludes.add( 'a7' )
two_byte_excludes.add( 'ff' )
//
let block = []
let block2 = []
for(let i=0; i<256; i++){
    let u = `${ i<16 ? '0': '' }${ i.toString(16) }`
    block .push(`    '${ u }': 'x86',`)
    block2.push(`    '0f ${ u }': '${ two_byte_excludes.has( u ) ? '--' : 'x86' }',`)
}
textresult.value = ['let single_byte_opcodes = {',block.join('\n'),'}'].join('\n')
textresult.value += ['\n','let two_byte_opcodes = {',block2.join('\n'),'}'].join('\n')
//


let u = {};
for(let i=0;i<256;i++){
  u[`${i<16?'0':''}${ i.toString(16) }`] = i 
}
console.log( JSON.stringify(u, ' ', 4) )

let two_byte_opcode = {
    '0f 00': 'sldt|str|lldt|ltr|ver[
    '0f 01': 'sgdt|vmcall|vmlaunch',
    '0f 02': 'x86',
    '0f 03': 'x86',
    '0f 04': '--',
    '0f 05': '--',
    '0f 06': 'x86',
    '0f 07': 'x86',
    '0f 08': 'x86',
    '0f 09': 'x86',
    '0f 0a': '--',
    '0f 0b': 'x86',
    '0f 0c': '--',
    '0f 0d': 'x86',
    '0f 0e': '--',
    '0f 0f': '--',
    '0f 10': 'x86',
    '0f 11': 'x86',
    '0f 12': 'x86',
    '0f 13': 'x86',
    '0f 14': 'x86',
    '0f 15': 'x86',
    '0f 16': 'x86',
    '0f 17': 'x86',
    '0f 18': 'x86',
    '0f 19': 'x86',
    '0f 1a': 'x86',
    '0f 1b': 'x86',
    '0f 1c': 'x86',
    '0f 1d': 'x86',
    '0f 1e': 'x86',
    '0f 1f': 'x86',
    '0f 20': 'x86',
    '0f 21': 'x86',
    '0f 22': 'x86',
    '0f 23': 'x86',
    '0f 24': '--',
    '0f 25': '--',
    '0f 26': '--',
    '0f 27': '--',
    '0f 28': 'x86',
    '0f 29': 'x86',
    '0f 2a': 'x86',
    '0f 2b': 'x86',
    '0f 2c': 'x86',
    '0f 2d': 'x86',
    '0f 2e': 'x86',
    '0f 2f': 'x86',
    '0f 30': 'x86',
    '0f 31': 'x86',
    '0f 32': 'x86',
    '0f 33': 'x86',
    '0f 34': 'x86',
    '0f 35': 'x86',
    '0f 36': '--',
    '0f 37': 'x86',
    '0f 38': 'x86',
    '0f 39': '--',
    '0f 3a': 'x86',
    '0f 3b': 'x86',
    '0f 3c': '--',
    '0f 3d': '--',
    '0f 3e': '--',
    '0f 3f': '--',
    '0f 40': 'x86',
    '0f 41': 'x86',
    '0f 42': 'x86',
    '0f 43': 'x86',
    '0f 44': 'x86',
    '0f 45': 'x86',
    '0f 46': 'x86',
    '0f 47': 'x86',
    '0f 48': 'x86',
    '0f 49': 'x86',
    '0f 4a': 'x86',
    '0f 4b': 'x86',
    '0f 4c': 'x86',
    '0f 4d': 'x86',
    '0f 4e': 'x86',
    '0f 4f': 'x86',
    '0f 50': 'x86',
    '0f 51': 'x86',
    '0f 52': 'x86',
    '0f 53': 'x86',
    '0f 54': 'x86',
    '0f 55': 'x86',
    '0f 56': 'x86',
    '0f 57': 'x86',
    '0f 58': 'x86',
    '0f 59': 'x86',
    '0f 5a': 'x86',
    '0f 5b': 'x86',
    '0f 5c': 'x86',
    '0f 5d': 'x86',
    '0f 5e': 'x86',
    '0f 5f': 'x86',
    '0f 60': 'x86',
    '0f 61': 'x86',
    '0f 62': 'x86',
    '0f 63': 'x86',
    '0f 64': 'x86',
    '0f 65': 'x86',
    '0f 66': 'x86',
    '0f 67': 'x86',
    '0f 68': 'x86',
    '0f 69': 'x86',
    '0f 6a': 'x86',
    '0f 6b': 'x86',
    '0f 6c': 'x86',
    '0f 6d': 'x86',
    '0f 6e': 'x86',
    '0f 6f': 'x86',
    '0f 70': 'x86',
    '0f 71': 'x86',
    '0f 72': 'x86',
    '0f 73': 'x86',
    '0f 74': 'x86',
    '0f 75': 'x86',
    '0f 76': 'x86',
    '0f 77': 'x86',
    '0f 78': 'x86',
    '0f 79': 'x86',
    '0f 7a': '--',
    '0f 7b': '--',
    '0f 7c': 'x86',
    '0f 7d': 'x86',
    '0f 7e': 'x86',
    '0f 7f': 'x86',
    '0f 80': 'x86',
    '0f 81': 'x86',
    '0f 82': 'x86',
    '0f 83': 'x86',
    '0f 84': 'x86',
    '0f 85': 'x86',
    '0f 86': 'x86',
    '0f 87': 'x86',
    '0f 88': 'x86',
    '0f 89': 'x86',
    '0f 8a': 'x86',
    '0f 8b': 'x86',
    '0f 8c': 'x86',
    '0f 8d': 'x86',
    '0f 8e': 'x86',
    '0f 8f': 'x86',
    '0f 90': 'x86',
    '0f 91': 'x86',
    '0f 92': 'x86',
    '0f 93': 'x86',
    '0f 94': 'x86',
    '0f 95': 'x86',
    '0f 96': 'x86',
    '0f 97': 'x86',
    '0f 98': 'x86',
    '0f 99': 'x86',
    '0f 9a': 'x86',
    '0f 9b': 'x86',
    '0f 9c': 'x86',
    '0f 9d': 'x86',
    '0f 9e': 'x86',
    '0f 9f': 'x86',
    '0f a0': 'x86',
    '0f a1': 'x86',
    '0f a2': 'x86',
    '0f a3': 'x86',
    '0f a4': 'x86',
    '0f a5': 'x86',
    '0f a6': '--',
    '0f a7': '--',
    '0f a8': 'x86',
    '0f a9': 'x86',
    '0f aa': 'x86',
    '0f ab': 'x86',
    '0f ac': 'x86',
    '0f ad': 'x86',
    '0f ae': 'x86',
    '0f af': 'x86',
    '0f b0': 'x86',
    '0f b1': 'x86',
    '0f b2': 'x86',
    '0f b3': 'x86',
    '0f b4': 'x86',
    '0f b5': 'x86',
    '0f b6': 'x86',
    '0f b7': 'x86',
    '0f b8': 'x86',
    '0f b9': 'x86',
    '0f ba': 'x86',
    '0f bb': 'x86',
    '0f bc': 'x86',
    '0f bd': 'x86',
    '0f be': 'x86',
    '0f bf': 'x86',
    '0f c0': 'x86',
    '0f c1': 'x86',
    '0f c2': 'x86',
    '0f c3': 'x86',
    '0f c4': 'x86',
    '0f c5': 'x86',
    '0f c6': 'x86',
    '0f c7': 'x86',
    '0f c8': 'x86',
    '0f c9': 'x86',
    '0f ca': 'x86',
    '0f cb': 'x86',
    '0f cc': 'x86',
    '0f cd': 'x86',
    '0f ce': 'x86',
    '0f cf': 'x86',
    '0f d0': 'x86',
    '0f d1': 'x86',
    '0f d2': 'x86',
    '0f d3': 'x86',
    '0f d4': 'x86',
    '0f d5': 'x86',
    '0f d6': 'x86',
    '0f d7': 'x86',
    '0f d8': 'x86',
    '0f d9': 'x86',
    '0f da': 'x86',
    '0f db': 'x86',
    '0f dc': 'x86',
    '0f dd': 'x86',
    '0f de': 'x86',
    '0f df': 'x86',
    '0f e0': 'x86',
    '0f e1': 'x86',
    '0f e2': 'x86',
    '0f e3': 'x86',
    '0f e4': 'x86',
    '0f e5': 'x86',
    '0f e6': 'x86',
    '0f e7': 'x86',
    '0f e8': 'x86',
    '0f e9': 'x86',
    '0f ea': 'x86',
    '0f eb': 'x86',
    '0f ec': 'x86',
    '0f ed': 'x86',
    '0f ee': 'x86',
    '0f ef': 'x86',
    '0f f0': 'x86',
    '0f f1': 'x86',
    '0f f2': 'x86',
    '0f f3': 'x86',
    '0f f4': 'x86',
    '0f f5': 'x86',
    '0f f6': 'x86',
    '0f f7': 'x86',
    '0f f8': 'x86',
    '0f f9': 'x86',
    '0f fa': 'x86',
    '0f fb': 'x86',
    '0f fc': 'x86',
    '0f fd': 'x86',
    '0f fe': 'x86',
    '0f ff': '--',
}
// GENERATOR CODE //
textresult.value=byteresult.value
.split(/\n/g)
.map(
    function(u,idx,me){ 
        return u
            .split(/\s/g)
            .map(
                function(v,j,metoo){ 
                    return `${ j!=metoo.length-1 ? '':'\': \'' }${ v }` 
                }
            ).join(' ')
    }
).join('\n')